(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{360:function(e,t,o){"use strict";o.r(t);var a=o(25),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"motivation"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#motivation"}},[e._v("#")]),e._v(" Motivation")]),e._v(" "),o("p",[e._v("I think that most users who create babel-transform-plugin etc.\nhave responded by writing AST using "),o("code",[e._v("@babel/types")]),e._v(" or automatically generating AST using "),o("code",[e._v("@babel/template")]),e._v(".\nHowever, some users may have encountered the following issues.")]),e._v(" "),o("ul",[o("li",[e._v("You have to write a lot of AST to achieve what You want to do.")]),e._v(" "),o("li",[e._v("Global variable name collision in code trying to traverse.")])]),e._v(" "),o("p",[e._v("The problem that can't be solved without writing a lot of AST can be solved to some extent by using "),o("code",[e._v("@babel/template")]),e._v(",\nbut the name conflict of global variables cannot be solved and the same code tends to be repeated because you cannot define dependencies between functions.")]),e._v(" "),o("p",[o("code",[e._v("@babel/helpers")]),e._v(" solved both problems. But it didn't give the user a way to define helpers.")]),e._v(" "),o("p",[e._v("Therefore, this time, I made a tool like "),o("code",[e._v("@babel/heleprs")]),e._v(" that can be used by defining a helper as a user-defined function (UDF).")]),e._v(" "),o("p",[e._v("I hope your development of babel-transform-plugin will be easier. ðŸ˜„")])])}),[],!1,null,null,null);t.default=n.exports}}]);